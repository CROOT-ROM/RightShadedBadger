{
  "animation_controllers": {
    "controller.animation.mob_golem_stone.default": {
      "initial_state": "init",
      "states": {
        "celebrate": {
          "animations":  [
            {
              "cheer_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "!variable.celebration"
            },
            {
              "death": "variable.is_dead"
            }
          ]
        },
        "climb": {
          "animations":  [
            {
              "clim_a": 1.0
            },
            {
              "clim_b": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.climbchooser",
          "transitions":  [
            {
              "move": "((query.velocity_y <= 0) && query.any_animation_finished)"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        },
        "death": {
          "animations":  [
            {
              "death_a": 1.0
            },
            {
              "death_b": 1.0
            }
          ],
          "on_entry": ["variable.face_anim_frame = 1;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.deathchooser",
          "sound_effects":  [
            {
              "effect": "dx_death",
              "enabled": true
            },
            {
              "effect": "attack_wall_punch_stop",
              "enabled": true
            }
          ]
        },
        "ground_pound_attack": {
          "animations":  [
            {
              "attack_wall_loop": 1.0
            }
          ],
          "on_entry": ["variable.firing_loop = 0;"],
          "on_exit": ["variable.face_anim_frame = 0;","@s sfx_attack_wall_loop_stop"],
          "sound_effects":  [
            {
              "effect": "attack_wall_punch",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "ground_pound_winddown": "(variable.firing_loop >= 3)"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            },
            {
              "idle": "variable.interrupted"
            }
          ]
        },
        "ground_pound_winddown": {
          "animations":  [
            {
              "attack_wall_winddown": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "attack_wall_winddown",
              "enabled": true
            },
            {
              "effect": "attack_wall_punch_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "idle": "(query.any_animation_finished || variable.interrupted)"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        },
        "ground_pound_windup": {
          "animations":  [
            {
              "attack_wall_windup": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "attack_wall_windup",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "ground_pound_attack": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            },
            {
              "idle": "variable.interrupted"
            }
          ]
        },
        "idle": {
          "animations":  [
            {
              "idles": 1.0
            }
          ],
          "on_entry": ["variable.idlechooser = math.random(0,3);"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "attack_wall_punch_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "melee_attack": "variable.melee_attack"
            },
            {
              "ground_pound_windup": "variable.ground_pound_attack"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            },
            {
              "celebrate": "variable.celebration"
            }
          ]
        },
        "init": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "spawn": "(variable.skip_spawn == 0)"
            },
            {
              "idle": "variable.skip_spawn"
            }
          ]
        },
        "knockback_end": {
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "(query.speed <= 0)"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "melee_attack": "variable.melee_attack"
            },
            {
              "ground_pound_windup": "variable.ground_pound_attack"
            }
          ]
        },
        "knockback_loop": {
          "animations":  [
            {
              "knockback_a": 1.0
            },
            {
              "tumble_fast": "(variable.speed_modifier < 0.5)"
            },
            {
              "tumble_slow": "(variable.speed_modifier >= 0.5)"
            }
          ],
          "on_entry": ["variable.speed_modifier = math.random(0,1.2);"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "attack_wall_punch_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "knockback_end": "(query.in_knockback == 0)"
            }
          ]
        },
        "melee_attack": {
          "animations":  [
            {
              "attack_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "(query.all_animations_finished || variable.interrupted)"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        },
        "move": {
          "animations":  [
            {
              "locomotion": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.movechooser",
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "stop": "((query.speed <= 0) && (variable.is_swimming == 0))"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "climb": "(((query.velocity_y > 0) && !variable.is_swimming) && (query.speed <= 4))"
            },
            {
              "idle": "(query.speed <= 0)"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        },
        "spawn": {
          "animations":  [
            {
              "spawn_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            }
          ]
        },
        "stop": {
          "animations":  [
            {
              "stop_a": 1.0
            },
            {
              "stop_b": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.stopchooser",
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "melee_attack": "variable.melee_attack"
            },
            {
              "ground_pound_windup": "variable.ground_pound_attack"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        },
        "stun": {
          "animations":  [
            {
              "stun_a": 1.0
            }
          ],
          "on_entry": ["variable.face_anim_frame = 1;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "attack_wall_punch_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "idle": "(variable.is_stunned == 0)"
            },
            {
              "knockback_loop": "query.in_knockback"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_stone.hitreaction": {
      "initial_state": "enter_exit",
      "states": {
        "enter_exit": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "hit_react": "((variable.normal_hit || variable.intense_hit) || query.in_knockback)"
            }
          ]
        },
        "hit_react": {
          "animations":  [
            {
              "hitreact_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "enter_exit": "(query.any_animation_finished && !query.in_knockback)"
            },
            {
              "in_knockback": "(query.in_knockback && query.any_animation_finished)"
            }
          ]
        },
        "in_knockback": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "landing": "!query.in_knockback"
            }
          ]
        },
        "landing": {
          "animations":  [
            {
              "landing_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "enter_exit": "query.any_animation_finished"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_stone.idles": {
      "initial_state": "idling",
      "states": {
        "idling": {
          "animations":  [
            {
              "idle_a": 1.0
            },
            {
              "idle_b": 1.0
            },
            {
              "idle_c": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.idlechooser",
          "transitions":  [
            {
              "swimming": "variable.is_swimming"
            }
          ]
        },
        "swimming": {
          "animations":  [
            {
              "swim_idle_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idling": "!variable.is_swimming"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_stone.locomotion": {
      "initial_state": "walk",
      "states": {
        "sprint": {
          "animations":  [
            {
              "sprint_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "walk": "(!variable.is_swimming && (query.speed <= 5))"
            }
          ]
        },
        "swim": {
          "animations":  [
            {
              "swim_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "(!variable.is_swimming && (query.speed <= 5))"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed >= 5))"
            }
          ]
        },
        "walk": {
          "animations":  [
            {
              "run_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed > 5))"
            }
          ]
        }
      }
    }
  },
  "format_version": "1.10.0"
}
