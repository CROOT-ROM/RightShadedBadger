{
  "animation_controllers": {
    "controller.animation.mob_golem_support.default": {
      "initial_state": "init",
      "states": {
        "cheer": {
          "animations":  [
            {
              "cheer_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;","variable.fx_cheer = 0;"],
          "transitions":  [
            {
              "idle": "!variable.celebration"
            },
            {
              "death": "variable.is_dead"
            }
          ]
        },
        "climb": {
          "animations":  [
            {
              "climb_a": 1.0
            }
          ],
          "blend_transition": 0.05,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "move": "((query.velocity_y == 0) && query.any_animation_finished)"
            },
            {
              "knockback": "query.in_knockback"
            },
            {
              "idle": "(query.speed <= 0)"
            }
          ]
        },
        "death": {
          "animations":  [
            {
              "death_a": 1.0
            }
          ],
          "on_entry": ["variable.face_anim_frame = 1;"],
          "on_exit": ["variable.face_anim_frame = 0;"]
        },
        "idle": {
          "animations":  [
            {
              "idles": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "knockback": "query.in_knockback"
            },
            {
              "water_spray": "(variable.water_spray || variable.buffed_water_spray)"
            },
            {
              "mud_attack": "variable.mud_attack"
            },
            {
              "cheer": "variable.celebration"
            }
          ]
        },
        "init": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "spawn": "(variable.skip_spawn == 0)"
            },
            {
              "idle": "variable.skip_spawn"
            }
          ]
        },
        "knockback": {
          "animations":  [
            {
              "knockback_a": 1.0
            },
            {
              "tumble_fast": "(variable.speed_modifier > 0.5)"
            },
            {
              "tumble_slow": "(variable.speed_modifier <= 0.5)"
            }
          ],
          "on_entry": ["variable.speed_modifier = math.random(0,0.9);"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "(query.in_knockback == 0)"
            },
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            }
          ]
        },
        "move": {
          "animations":  [
            {
              "locomotion": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "climb": "(((query.velocity_y > 0) && (query.speed < 7)) && (variable.is_swimming == 0))"
            },
            {
              "idle": "(query.speed <= 0)"
            },
            {
              "knockback": "query.in_knockback"
            },
            {
              "cheer": "variable.celebration"
            }
          ]
        },
        "mud_attack": {
          "animations":  [
            {
              "attack_b": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "(query.any_animation_finished || variable.interrupted)"
            },
            {
              "knockback": "query.in_knockback"
            },
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "cheer": "variable.celebration"
            }
          ]
        },
        "spawn": {
          "animations":  [
            {
              "spawn_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            }
          ]
        },
        "stun": {
          "animations":  [
            {
              "stun_a": 1.0
            }
          ],
          "on_entry": ["variable.face_anim_frame = 1;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "idle": "(variable.is_stunned == 0)"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "water_spray": {
          "animations":  [
            {
              "attack_a": 1.0
            }
          ],
          "on_entry": ["variable.fx_attack_a = 0;"],
          "on_exit": ["variable.face_anim_frame = 0;","variable.fx_attack_a = 1;","@s sfx_attack_a_interrupt"],
          "transitions":  [
            {
              "idle": "(query.any_animation_finished || variable.interrupted)"
            },
            {
              "knockback": "query.in_knockback"
            },
            {
              "stun": "(variable.is_stunned && (query.in_knockback == 0))"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "cheer": "variable.celebration"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_support.hit_reaction": {
      "initial_state": "enter_exit",
      "states": {
        "enter_exit": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "hit_reaction": "((variable.intense_hit || variable.normal_hit) || query.in_knockback)"
            }
          ]
        },
        "hit_reaction": {
          "animations":  [
            {
              "hit_reaction_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "in_knockback": "(query.in_knockback && query.any_animation_finished)"
            },
            {
              "enter_exit": "(query.any_animation_finished && !query.in_knockback)"
            }
          ]
        },
        "in_knockback": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "landing": "!query.in_knockback"
            }
          ]
        },
        "landing": {
          "animations":  [
            {
              "landing_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "enter_exit": "query.any_animation_finished"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_support.idles": {
      "initial_state": "on_land",
      "states": {
        "in_water": {
          "animations":  [
            {
              "swim_idle": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "on_land": "!variable.is_swimming"
            }
          ]
        },
        "on_land": {
          "animations":  [
            {
              "idle_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "in_water": "variable.is_swimming"
            }
          ]
        }
      }
    },
    "controller.animation.mob_golem_support.locomotion": {
      "initial_state": "walk",
      "states": {
        "sprint": {
          "animations":  [
            {
              "sprint_a": 1.0
            }
          ],
          "blend_transition": 0.3,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "(!variable.is_swimming && (query.speed <= 7))"
            },
            {
              "swim": "variable.is_swimming"
            }
          ]
        },
        "swim": {
          "animations":  [
            {
              "swim_a": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "(!variable.is_swimming && (query.speed <= 7))"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed > 7))"
            }
          ]
        },
        "walk": {
          "animations":  [
            {
              "walk_a": "(variable.is_swimming == 0)"
            }
          ],
          "blend_transition": 0.3,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "sprint": "(!variable.is_swimming && (query.speed > 7))"
            },
            {
              "swim": "variable.is_swimming"
            }
          ]
        }
      }
    }
  },
  "format_version": "1.10.0"
}
