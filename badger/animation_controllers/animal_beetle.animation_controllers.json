{
  "animation_controllers": {
    "controller.animation.animal_beetle.default": {
      "initial_state": "spawn",
      "states": {
        "burst": {
          "animations":  [
            {
              "burst_ability": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "run_loop_stop",
              "enabled": true
            },
            {
              "effect": "burst",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "cheer": {
          "animations":  [
            {
              "cheer_a": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "climb": {
          "animations":  [
            {
              "climb_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "((query.velocity_y == 0) && query.any_animation_finished)"
            },
            {
              "burst": "variable.burst"
            },
            {
              "stop": "(query.speed <= 0)"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "death": {
          "animations":  [
            {
              "death_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "run_loop_stop",
              "enabled": true
            },
            {
              "effect": "dx_death",
              "enabled": true
            }
          ]
        },
        "idle": {
          "animations":  [
            {
              "idles": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": "slerp",
          "on_entry": ["variable.idlechooser = math.random(0,2);"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "run_loop_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "walk": "(query.speed > 0)"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "burst": "variable.burst"
            },
            {
              "cheer": "variable.player_cheer"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "knockback": {
          "animations":  [
            {
              "knockback_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "stun": "(variable.is_stunned && !query.in_knockback)"
            },
            {
              "death": "(variable.is_dead && !query.in_knockback)"
            },
            {
              "stop": "!query.in_knockback"
            },
            {
              "idle": "(query.speed <= 0)"
            },
            {
              "walk": "(query.speed > 0)"
            }
          ]
        },
        "spawn": {
          "animations":  [
            {
              "spawn_a": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": "slerp",
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.all_animations_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "burst": "variable.burst"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "stop": {
          "animations":  [
            {
              "stop_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "walk": "(query.speed > 0)"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "stun": {
          "animations":  [
            {
              "stun_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "run_loop_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "(!variable.is_stunned && query.in_knockback)"
            },
            {
              "idle": "!variable.is_stunned"
            }
          ]
        },
        "walk": {
          "animations":  [
            {
              "locomotion": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "run_loop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "stop": "(!variable.is_swimming && (query.speed <= 0))"
            },
            {
              "idle": "(variable.is_swimming && (query.speed <= 0))"
            },
            {
              "climb": "(!variable.is_swimming && (query.velocity_y > 0))"
            },
            {
              "burst": "variable.burst"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        }
      }
    },
    "controller.animation.animal_beetle.hit_react": {
      "states": {
        "enter_exit": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "hit_react": "((variable.intense_hit || variable.normal_hit) || query.in_knockback)"
            }
          ]
        },
        "hit_react": {
          "animations":  [
            {
              "hit_react_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "in_air": "(query.in_knockback && query.any_animation_finished)"
            },
            {
              "enter_exit": "(!query.in_knockback && query.any_animation_finished)"
            }
          ]
        },
        "in_air": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "landing": "!query.in_knockback"
            }
          ]
        },
        "landing": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "enter_exit": "(query.velocity_y <= 0)"
            }
          ]
        }
      }
    },
    "controller.animation.animal_beetle.idles": {
      "initial_state": "on_land",
      "states": {
        "in_water": {
          "animations":  [
            {
              "swim_idle": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "on_land": "!variable.is_swimming"
            }
          ]
        },
        "on_land": {
          "animations":  [
            {
              "idle_a": 1.0
            },
            {
              "idle_b": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "in_water": "variable.is_swimming"
            }
          ]
        }
      }
    },
    "controller.animation.animal_beetle.locomotion": {
      "initial_state": "walk",
      "states": {
        "sprint": {
          "animations":  [
            {
              "sprint": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "walk": "(!variable.is_swimming && (query.speed < 7))"
            }
          ]
        },
        "swim": {
          "animations":  [
            {
              "swim_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "(!variable.is_swimming && (query.speed < 7))"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed >= 7))"
            }
          ]
        },
        "walk": {
          "animations":  [
            {
              "walk_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed >= 7))"
            }
          ]
        }
      }
    }
  },
  "format_version": "1.10.0"
}
