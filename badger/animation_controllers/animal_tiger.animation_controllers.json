{
  "animation_controllers": {
    "controller.animation.animal_tiger.default": {
      "initial_state": "spawn",
      "states": {
        "cheer": {
          "animations":  [
            {
              "cheer_short_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "climb": {
          "animations":  [
            {
              "climb_a": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "move": "query.all_animations_finished"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "roar": "variable.roar"
            },
            {
              "idle": "query.all_animations_finished"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "death": {
          "animations":  [
            {
              "death_a": 1.0
            }
          ],
          "on_entry": ["variable.look_at_disabled = 1;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "dx_death",
              "enabled": true
            },
            {
              "effect": "dx_idle_c_stop",
              "enabled": true
            }
          ]
        },
        "idle": {
          "animations":  [
            {
              "idles": 1.0
            }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": true,
          "on_entry": ["variable.idlechooser = math.random(0,3);","variable.look_at_disabled = 0;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "move": "(query.speed > 0)"
            },
            {
              "roar": "variable.roar"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "climb": "(!variable.is_swimming && (query.velocity_y > 0))"
            },
            {
              "cheer": "variable.player_cheer"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "knockback": {
          "animations":  [
            {
              "knockback": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "death": "(variable.is_dead && !query.in_knockback)"
            },
            {
              "stun": "(!query.in_knockback && variable.is_stunned)"
            },
            {
              "stop": "!query.in_knockback"
            },
            {
              "move": "(!query.in_knockback && (query.speed > 0))"
            },
            {
              "idle": "(!query.in_knockback && (query.speed <= 0))"
            }
          ]
        },
        "move": {
          "animations":  [
            {
              "locomotion": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_entry": ["variable.look_at_disabled = 0;"],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "dx_idle_c_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "roar": "variable.roar"
            },
            {
              "stop": "((variable.is_swimming == 0) && (query.speed <= 0))"
            },
            {
              "climb": "(!variable.is_swimming && (query.velocity_y > 0))"
            },
            {
              "idle": "(variable.is_swimming && (query.speed <= 0))"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "roar": {
          "animations":  [
            {
              "roar": 1.0
            }
          ],
          "on_entry": ["variable.look_at_disabled = 1;"],
          "on_exit": ["variable.look_at_disabled = 0;","variable.face_anim_frame = 0;"],
          "sound_effects":  [
            {
              "effect": "roar",
              "enabled": true
            },
            {
              "effect": "dx_idle_c_stop",
              "enabled": true
            }
          ],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "spawn": {
          "animations":  [
            {
              "spawn_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "stop": {
          "animations":  [
            {
              "stop": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "query.any_animation_finished"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "move": "(query.speed > 0)"
            },
            {
              "stun": "variable.is_stunned"
            },
            {
              "roar": "variable.roar"
            },
            {
              "knockback": "query.in_knockback"
            }
          ]
        },
        "stun": {
          "animations":  [
            {
              "stun_a": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "idle": "(variable.is_stunned == 0)"
            },
            {
              "death": "variable.is_dead"
            },
            {
              "knockback": "(!variable.is_stunned && query.in_knockback)"
            }
          ]
        }
      }
    },
    "controller.animation.animal_tiger.hit_react": {
      "initial_state": "enter_exit",
      "states": {
        "enter_exit": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "hit_reaction": "((variable.normal_hit || variable.intense_hit) || query.in_knockback)"
            }
          ]
        },
        "hit_reaction": {
          "animations":  [
            {
              "hit_react_b": 1.0
            }
          ],
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "in_knockback": "(query.in_knockback && query.any_animation_finished)"
            },
            {
              "enter_exit": "(!query.in_knockback && query.any_animation_finished)"
            }
          ]
        },
        "in_knockback": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "landing": "!query.in_knockback"
            }
          ]
        },
        "landing": {
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "enter_exit": "(query.velocity_y <= 0)"
            }
          ]
        }
      }
    },
    "controller.animation.animal_tiger.idles": {
      "initial_state": "on_land",
      "states": {
        "in_water": {
          "animations":  [
            {
              "swimidle_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "on_land": "!variable.is_swimming"
            }
          ]
        },
        "on_land": {
          "animations":  [
            {
              "idle_a": 1.0
            },
            {
              "idle_b": 1.0
            },
            {
              "idle_c": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "select_variable": "variable.idlechooser",
          "transitions":  [
            {
              "in_water": "variable.is_swimming"
            }
          ]
        }
      }
    },
    "controller.animation.animal_tiger.locomotion": {
      "initial_state": "walk",
      "states": {
        "sprint": {
          "animations":  [
            {
              "run_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "walk": "(!variable.is_swimming && (query.speed < 9))"
            }
          ]
        },
        "swim": {
          "animations":  [
            {
              "swim_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "walk": "(!variable.is_swimming && (query.speed < 9))"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed >= 9))"
            }
          ]
        },
        "walk": {
          "animations":  [
            {
              "trot_a": 1.0
            }
          ],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true,
          "on_exit": ["variable.face_anim_frame = 0;"],
          "transitions":  [
            {
              "swim": "variable.is_swimming"
            },
            {
              "sprint": "(!variable.is_swimming && (query.speed >= 9))"
            }
          ]
        }
      }
    }
  },
  "format_version": "1.10.0"
}
